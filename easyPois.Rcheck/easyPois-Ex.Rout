
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "easyPois"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "easyPois-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('easyPois')

Attaching package: 'easyPois'

The following object is masked from 'package:stats':

    logLik

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("estimatePois")
> ### * estimatePois
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: estimatePois
> ### Title: estimatePois function for MLE calculation
> ### Aliases: estimatePois
> 
> ### ** Examples
> 
> set.seed(10)
> y <- rpois(1000,5)
> estimatePois(y, lambda = 10, SEtype = "bootstrap")
 ----------- FAILURE REPORT -------------- 
 --- failure: the condition has length > 1 ---
 --- srcref --- 
: 
 --- package (from environment) --- 
easyPois
 --- call from context --- 
standardError(y, SEtype = c("basic", "bootstrap"), B = 1000)
 --- call from argument --- 
if (SEtype == "basic") {
    se <- sqrt(mle(y)/length(y))
}
 --- R stacktrace ---
where 1: standardError(y, SEtype = c("basic", "bootstrap"), B = 1000)
where 2: standardError(y, SEtype = c("basic", "bootstrap"), B = 1000)
where 3: .local(y, lambda, SEtype)
where 4: estimatePois(y, lambda = 10, SEtype = "bootstrap")
where 5: estimatePois(y, lambda = 10, SEtype = "bootstrap")

 --- value of length: 2 type: logical ---
[1]  TRUE FALSE
 --- function from context --- 
Method Definition:

function (y, SEtype = c("basic", "bootstrap"), B = 1000) 
{
    mle <- function(y) {
        return(sum(y)/length(y))
    }
    if (SEtype == "basic") {
        se <- sqrt(mle(y)/length(y))
    }
    if (SEtype == "bootstrap") {
        matrix <- replicate(B, {
            return(sample(y, length(y), replace = T))
        })
        bootmle <- apply(matrix, 2, mle)
        se <- sd(bootmle)
    }
    return(se)
    if (any(y < 0)) {
        stop("For log likelihood, values of y must be greater or equal to 0")
    }
    if (B <= 0) {
        stop("For bootstrapping, B must be greater than 0.")
    }
    if (!(SEtype %in% c("basic", "bootstrap"))) {
        stop("Please insert a defined method for SEtype.")
    }
}
<bytecode: 0x000000000966ceb0>
<environment: namespace:easyPois>

Signatures:
        y        
target  "integer"
defined "ANY"    
 --- function search by body ---
S4 Method standardError:easyPois defined in namespace easyPois with signature ANY has this body.
 ----------- END OF FAILURE REPORT -------------- 
Error in if (SEtype == "basic") { : the condition has length > 1
Calls: estimatePois ... estimatePois -> .local -> standardError -> standardError
Execution halted
